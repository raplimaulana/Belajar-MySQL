### MANY TO MANY RELATIONSHIP ###
Many to Many adalah table relationship yang paling kompleks, dan kadang membingungkan untuk pemula.
Many to Many adalah relasi dimana ada relasi antara 2 tabel dimana table pertama bisa punya banyak relasi di table kedua, dan table kedua pun punya banyak relasi di table pertama.
Ini memang sedikit membingungkan, bagaimana caranya bisa relasi kebanyakan secara bolak balik, sedangkan di table kita cuma punya 1 kolom?
Contoh relasi many to many adalah relasi antara produk dan penjualan, dimana setiap produk bisa dijual berkali kali, dan setiap penjualan bisa untuk lebih dari satu produk.

##Bagaimana Implementasi Many to Many?
Sekarang pertanyaannya, bagaimana implementasi many to many?
Apakah kita harus menambahkan id_order di table products? atau id_product di table orders?

#Id Product di Table Order
Jika kita menambahkan id_product di table orders, artinya sekarang sudah benar, bahwa 1 product bisa dijual berkali-kali.
Namun masalahnya adalah, berarti 1 order hanya bisa membeli 1 product, karena cuma ada 1 kolom untuk id_product.
Oke kalo gitu kita tambahkan id_product1, id_product2, dan seterusnya. Solusi ini bisa dilakukan, tapi tidak baik, artinya akan selalu ada maksimal barang yang bisa kita beli dalam satu order.

#Id Order di Table Product
Jika kita tambahkan id_order di table products, artinya sekarang 1 order bisa membeli lebih dari 1 product, oke sudah benar.
Tapi sayangnya masalahnya terbalik sekarang, 1 product cuma bisa dijual satu kali, tidak bisa dijual berkali-kali, karena kolom id_order nya cuma 1.
Kalupun kita tambah id_order1, id_order2 dan seterusnya di table product, tetap ada batasan maksimal nya.
Lantai bagaimana solusinya untuk relasi many to many?

#Membuat Table Relasi
Solusi yang biasa dilakukan jika terjadi relasi many to many adalah, biasanya kita akan menambah 1 tabel ditengahnya.
Tabel ini bertugas sebagai jembatan untuk menggabungkan relasi many to many.
Isi table ini akan ada id dari table pertama dan table kedua, dalam kasus ini adalah id_product dan id_order.
Dengan demikian, kita bisa menambahkan beberapa data ke dalam tabel relasi ini, sehingga berarti satu product bisa dijual beberapa kali di dalam table order, dan satu order bisa membeli lebih dari satu product.

#Membuat Table Order
CREATE TABLE orders
(
    id          INT NOT NULL AUTO_INCREMENT,
    total       INT NOT NULL,
    order_date   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
);

#Membuat Table Order Deatil
CREATE TABLE orders_detail
(
    id_product  VARCHAR(100) NOT NULL,
    id_order    INT NOT NULL,
    price       INT NOT NULL,
    quantity    INT NOT NULL,
    PRIMARY KEY (id_product, id_order)
);

#Membuat Foreign Key
ALTER TABLE orders_detail
    ADD CONSTRAINT fk_orders_detail_product
        FOREIGN KEY (id_product) REFERENCES products (id);

ALTER TABLE orders_detail
    ADD CONSTRAINT fk_orders_detail_order
        FOREIGN KEY (id_product) REFERENCES orders (id);

#Melihat Data Order, Detail dan Product-nya
SELECT *
FROM orders
    JOIN orders_detail ON (orders_detail.id_order = orders.id)
    JOIN products ON (products.id = orders_detail.id_order);