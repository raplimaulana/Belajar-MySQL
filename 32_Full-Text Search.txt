### FULL-TEXT SEARCH ###

##Masalah dengan LIKE operator
Kadang kita ingin mencari sebuah kata dalam tabel, dan biasanya kita akan menggunakan LIKE operator.
Operasi yang dilakukan LIKE operator adalah dengan cara mencari seluruh data di tabel dari baris pertama sampai terakhir, hal ini membuat operasi LIKE sangat lambat.
Menambah index di tabel juga tidak akan membantu, karen LIKE operator tidak menggunakan index.
MySQL menyediakan fitur Full Text Search jika ada kasus kita ingin melakukan hal ini.

##Full-Text Search
Full-Text Search memungkinkan kita bisa mencari sebagian kata di kolom dengan tipe data String.
Ini sangat cocok ketika pada kasus kita memang membutuhkan pencarian yang tidak hanya sekedar operasi = (equals, sama dengan).
https://dev.mysql.com/doc/refman/8.0/en/fulltext-search.html 

##Membuat Table dengan Full-Text Search
CREATE TABLE products
(
    id          VARCHAR(10) NOT NULL,
    name        VARCHAR(100) NOT NULL,
    desscription TEXT,
    price       INT UNSIGNED NOT NULL,
    quantity    INT UNSIGNED NOT NULL DEFAULT 0,
    creted_at   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    FULLTEXT products_search (name, desscription)
);

##Menambah/Menghapus Full-Text Search
ALTER TABLE products
ADD FULLTEXT products_search (name, desscription);

##Menambah/Menghapus Full-Text Search
ALTER TABLE products
DROP INDEX products_search;

##Mode Full-Text Search
MySQL menyediakan beberapa mode untuk melakukan pencarian di Full-Text Search, kita bisa memilihnya sesuai kebutuhan kita.
1. Natural Language
   Mencari seperti bahasa natural (per kata). 
   https://dev.mysql.com/doc/refman/8.0/en/fulltext-natural-language.html 

   #Mencari dengan Natural Language Mode
   SELECT *
   FROM products
   WHERE MATCH(name, desscription)
      AGAINST('ayam' IN NATURAL LANGUAGE MODE);
    
   *hasil pencarian teratas berisi kata yang paling banyak ditemukan, bukan berdasarakan urutan ascending kolom id ataupun primary key lainnya

2. Boolean
   Mencari dengan kemampuan mengandung kata (+) atau tidak mengandung kata (-) dan lain-lain.
   https://dev.mysql.com/doc/refman/8.0/en/fulltext-boolean.html 

   #Mencari dengan Boolean Mode
   SELECT *
   FROM products
   WHERE MATCH(name, desscription)
      AGAINST('+mie -bakso' IN BOOLEAN MODE);

3. Query Expansion 
   Mencari seperti natural language, namun melakukan dua kali pencarian. 
   Pencarian pertama menggunakan natural language, pencarian kedua melakukan pencarian dari kedekatan hasil pertama. 
   Misal kita mencari kata “bakso”, lalu ternyata di dalam “bakso” ada kata “mie”, maka kemungkinan query kedua akan mencari kata “mie” juga 
   https://dev.mysql.com/doc/refman/8.0/en/fulltext-query-expansion.html 

   #Mencari dengan Query Expansion  Mode
   SELECT *
   FROM products
   WHERE MATCH(name, desscription)
      AGAINST('bakso' WITH QUERY EXPANSION);