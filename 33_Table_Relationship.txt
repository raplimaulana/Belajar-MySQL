### TABLE RELATIONSHIP ###
Dalam Relational DBMS, salah satu fitur andalan nya adalah table relationship. Yaitu relasi antar tabel.
Kita bisa melakukan relasi dari satu tabel ke tabel lain.
Dalam kehidupan nyata pun pasti kita akan sering membuat relasi antar tabel.
Misal, saat kita membuat aplikasi penjualan, di laporan penjualan pasti ada data barang. Jika di tabel artinya tabel penjualan akan berelasi dengan tabel barang.
Misal dalam aplikasi kampus, tabel mahasiswa akan berelasi dengan tabel mata kuliah, tabel dosen dan lain-lain.

##Foreign Key
Saat membuat relasi tabel, biasanya kita akan membuat sebuah kolom sebagai referensi ke tabel lainnya.
Misal saat kita membuat tabel penjualan, di dalam tabel penjualan, kita akan menambahkan kolom id_produk sebagai referensi ke tabel produk, yang berisi primary key di tabel produk.
Kolom referensi ini di MySQL dinamakan Foreign Key.
Kita bisa menambah satu satu lebih foreign key ke dalam sebuah tabel.
Membuat foreign key sama seperti membuat kolom biasanya, hanya saja kita perlu memberi tahu MySQL bahwa itu adalah foreign key ke tabel lain.

##Membuat Table dengan Foreign Key
CREATE TABLE wishlist
(
    id          VARCHAR(10) NOT NULL AUTO_INCREMENT,
    id_product  VARCHAR(100) NOT NULL,
    desscription TEXT,
    PRIMARY KEY (id),
    CONSTRAINT fk_wishlist_product
        FOREIGN KEY (id_product) REFERENCES products (id)       #tabel wishlist memiliki kolom 'customer_id' sebagai foreign key yang mengacu pada primary key 'id' di tabel products
);

##Menambah Foreign Key
ALTER TABLE wishlist
ADD CONSTRAINT fk_wishlist_product
    FOREIGN KEY (id_product) REFERENCES products (id);

##Menghapus Foreign Key
ALTER TABLE wishlist
DROP CONSTRAINT fk_wishlist_product;

##Keuntungan Menggunakan Foreign Key
Foreign key memastikan bahwa data yang kita masukkan ke kolom tersebut harus tersedia di tabel reference nya.
Selain itu saat kita menghapus data di tabel reference, MySQL akan mengecek apakah id nya digunakan di foreign key di tabel lain, jika digunakan, maka secara otomatis MySQL akan menolak proses delete data di tabel reference tersebut.

##Ketika Menghapus Data Berelasi
Seperti yang sebelumnya dibahas, ketika kita menghapus data yang berelasi, maka secara otomatis MySQL akan menolak operasi delete tersebut.
Kita bisa mengubah fitur ini jika kita mau, ada banyak hal yang bisa dilakukan ketika data berelasi dihapus, defaultnya memang akan ditolak (RESTRICT).

DELETE FROM products
WHERE id = 'P0001';                     #data yang terdaftar sebagai foreign key tidak bisa dihapus

#Behavior Foreign Key
-----------------------------------------------------------
| Behavior  | ON DELETE           | ON UPDATE             |
|-----------|---------------------|-----------------------|
| RESTRICT  | Ditolak             | Ditolak               |
|-----------|---------------------|-----------------------|
| CASCADE   | Data akan dihapus   | Data akan ikut diubah |
|-----------|---------------------|-----------------------|
| NO ACTION | Data dibiarkan      | Data dibiarkan        |
|-----------|---------------------|-----------------------|
| SET NULL  | Diubah menjadi NULL | Diubah menjadi NULL   |
-----------------------------------------------------------

#Mengubah Behavior Agar Bisa Menghapus Relasi
ALTER TABLE wishlist
ADD CONSTRAINT fk_wishlist_product
    FOREIGN KEY (id_product) REFERENCES products (id)
        ON DELETE CASCADE ON UPDATE CASCADE;