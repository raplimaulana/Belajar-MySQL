### JENIS-JENIS JOIN ### 
Sebelumnya kita sudah bahas tentang JOIN table, tapi sebenarnya ada banyak sekali jenis-jenis JOIN table di MySQL, diantaranya:
1. INNER JOIN
   INNER JOIN adalah mekanisme JOIN, dimana terdapat relasi antara tabel pertama dan tabel kedua.
   Jika ada data di tabel pertama yang tidak memiliki relasi di table kedua ataupun sebaliknya, maka hasil INNER JOIN tidak akan ditampilkan.
   Ini adalah default JOIN di MySQL.
   Jika kita menggunakan JOIN seperti yang sudah kita praktekan sebelumnya, sebenarnya itu akan melakukan INNER JOIN.

   #Melakukan Inner Join
   SELECT * FROM categories
   INNER JOIN products ON (products.id_category = categories.id);

2. LEFT JOIN
   LEFT JOIN adalah mekanisme JOIN seperti INNER JOIN, namun semua data di table pertama akan diambil juga.
   Jika ada yang tidak memiliki relasi di table kedua, maka hasilnya akan NULL.

   #Melakukan Left Join
   SELECT * FROM categories
   LEFT JOIN products ON (products.id_category = categories.id);

3. RIGHT JOIN
   RIGHT JOIN adalah mekanisme JOIN seperti INNER JOIN, namun semua data di table kedua akan diambil juga.
   Jika ada yang tidak memiliki relasi di table pertama, maka hasilnya akan NULL.

   #Melakukan Right Join
   SELECT * FROM categories
   RIGHT JOIN products ON (products.id_category = categories.id);

4. CROSS JOIN
   CROSS JOIN adalah salah satu JOIN yang sangat jangan sekali digunakan.
   CROSS JOIN adalah melakukan join dengan cara mengkalikan data di tabel pertama dengan dada di table kedua.
   Artinya jika ada 5 data di tabel pertama, dan 5 data di tabel kedua, akan menghasilkan 25 kombinasi data (5 x 5).
   Sekali lagi perlu diingat, ini adalah JOIN yang sangat jarang sekali digunakan.

   #Menggunakan Cross Join
   SELECT * FROM categories
   CROSS JOIN products;

   #Membuat Tabel Perkalian
   CREATE TABLE numbers
   (
      id          INT NOT NULL,
      PRIMARY KEY (id),
   );

   #Cross Join Tabel Perkalian
   SELECT number1.id, number2.id, (number1.id * number2.id) AS result 
   FROM numbers AS number1
       CROSS JOIN numbers AS number2
   ORDER BY number1.id, number2.id;
